# Mitsuki bot settings file.
# 
# To modify these settings for your Mitsuki bot, copy this file to a
# gitignored path, such as ./assets and ./settings. This ensures a smooth
# update process from the Mitsuki repository.


mitsuki:
  # [DEPRECATED] Path to default (base) messages file.
  # 
  # To avoid issues when updating Mitsuki from repository, avoid modifying
  # the defaults file directly. Instead, create another messages.yaml file
  # in a gitignored path, such as ./assets and ./settings.
  #
  # Superseded by messages_dir. If specified, Mitsuki will load from
  # messages_dir and messages_custom_dir instead of messages_default and
  # messages.
  messages_default: "defaults/messages.yaml"

  # [DEPRECATED] Path to custom messages file.
  # 
  # Templates in this file will overwrite defaults in messages_default.
  # 
  # Superseded by messages_custom_dir. If messages_dir is specified,
  # Mitsuki will not load the file under this setting.
  messages: 

  # Path to messages directory.
  # 
  # This directory is recursively checked for all .yaml and .yml (YAML) files
  # to be loaded as message templates. Supersedes messages_default.
  #
  # The directory must contain a defaults.yaml or messages.yaml for use as
  # the default or base message templates file.
  messages_dir: "messages"

  # Path to custom messages directory.
  # 
  # This directory is recursively checked for all .yaml and .yml (YAML) files
  # to be loaded as message templates.
  # 
  # Templates defined by template files in this directory overwrite templates
  # defined through messages_dir.
  messages_custom_dir: 

  # Daily reset time.
  # 
  # Determines the reset time for certain functions, such as /gacha daily.
  #
  # [FUTURE] Different modules can set their own daily reset time.
  # 
  # Format: HH:MM+hhmm <or> HH:MM-hhmm
  # HH:MM   daily reset time (24-hour time)
  # +hhmm   daily reset timezone (+0000 for UTC)
  daily_reset: "00:00+0000"

  # Status messages ("Playing ...").
  status:
  - "Magical Mitsuki"

  # Time to cycle to next status, in seconds.
  # 
  # Setting this value to 0 or having only one status message disables
  # status cycling. For ratelimit reasons, this setting has a hard minimum
  # of 60 seconds.
  #   
  # The cycle resets after a bot restart.
  status_cycle: 300
  
  # Whether the status messages cycling should be randomized. Otherwise, cycle
  # the status messages sequentially.
  status_randomize: false

  # Type of database to use.
  # 
  # Available options:
  # - sqlite
  # - postgresql [EXPERIMENTAL]
  db_use: "sqlite"

  # Path to SQLite database when db_use = "sqlite".
  #
  # Paths are relative to Mitsuki root path. To use absolute paths, add an
  # initial slash in the field below. For Windows absolute paths, use double
  # backslash, such as "/C:\\path\\to\\db.sqlite3".
  db_path: "data/db.sqlite3"

  # [EXPERIMENTAL] Path to PostgreSQL database when db_use = "postgresql".
  # 
  # The format is `host:port/dbname?options`. Database username and password
  # are configured separately in .env fields DB_USERNAME and DB_PASSWORD
  # respectively.
  db_pg_path: "localhost:5432/mitsuki"

  # Emit INFO messages.
  # 
  # When turned off, only WARNING and ERROR messages are emitted in the terminal.
  log_info: false


dev:
  # Guild ID for the dev-mode.
  #
  # If set, registers the commands in this bot for only the specified guild,
  # which syncs instantly. Otherwise, registers the commands as global.
  scope: 

  # Path to SQLite dev-mode database when mitsuki.db_use = "sqlite".
  # 
  # Paths are relative to Mitsuki root path. To use absolute paths, add an
  # initial slash in the field below. For Windows absolute paths, use double
  # backslash, such as "/C:\\path\\to\\db.sqlite3".
  db_path: "data/db-dev.sqlite3"

  # [EXPERIMENTAL] Path to PostgreSQL dev-mode database when db_use = "postgresql".
  # 
  # The format is `host:port/dbname?options`. Database username and password
  # are configured separately in .env fields DB_USERNAME and DB_PASSWORD
  # respectively.
  db_pg_path: "localhost:5432/mitsuki"


emoji:
  # Emoji for use in buttons and other parts of the message.
  # 
  # Supported formats follow that of interactions.py's PartialEmoji.from_str():
  # - ✅
  # - :emoji:1234567890
  # - <:emoji:1234567890>
  # - a:animated_emoji:1234567890
  # - <a:animated_emoji:1234567890>
  
  # Some keys are quoted due to YAML conversion (yes, no, on, off)

  # Yes, true, checked
  "yes": "✅"

  # No, false, unchecked
  "no": "❌"

  # On, active
  "on": "☀"

  # Off, inactive
  "off": "🌑"

  # New, add, create
  new: "*️⃣"

  # Edit, modify
  edit: "✏"

  # Delete, remove
  delete: "🗑"

  # View list, e.g. gacha cards, schedule messages
  list: "🗒"

  # View gallery, e.g. gacha gallery
  gallery: "🖼"

  # Configure, settings
  configure: "⚙"

  # Refresh
  refresh: "🔄"

  # Back, return to previous menu
  back: "↩"

  # Text field
  text: "📝"

  # Time field
  time: "🕗"

  # Date field
  date: "📅"

  # Paginator first page
  page_first: "⏪"

  # Paginator previous page
  page_previous: "◀"

  # Paginator next page
  page_next: "▶"

  # Paginator last page
  page_last: "⏩"

  # Paginator go to page
  page_goto: "#️⃣"


gacha:
  # Gacha settings file, containing rates, gacha currency options, and more.
  settings: "exampleassets/gacha_settings.yaml"

  # Gacha roster file, containing card definitions.
  roster: "exampleassets/gacha_roster.yaml"