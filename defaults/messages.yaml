# Base colors
_colors:
  ok      : &color_ok      0x237feb
  warning : &color_warning 0xc2b41d
  error   : &color_error   0xc31d1d


# Template for reference
template:
  author      :       # author
    name      : >-    # author.name
      
    url       :       # author.url
    icon_url  :       # author.icon_url
  title       : >-    # title
     
  url         :       # url
  thumbnail   :       # thumbnail.url
  description : >-    # description
    
  desc_field  : >-    # description (joined by newlines) (recurring) (UC)
    
  desc_fields :       # description (joined by newlines) (UC)
  - ""
  image       :       # image
  footer      :       # footer
    text      : >-    # footer.text
      
    icon_url  :       # footer.icon_url
  timestamp   :       # timestamp (UC)
  color       :       # color
  field       :       # fields (recurring) (UC)
    name      :       # fields.name
    value     :       # fields.value
    inline    : false # fields.inline
  fields      :       # fields
  - name      :       # fields.name
    value     :       # fields.value
    inline    : false # fields.inline
    

# Default, used as base by all other messages
default:
  footer      : 
    text      : >-
      ${username}
    icon_url  : >-
      ${usericon}
  color: *color_ok


# Message if an application error (unhandled error) has occured.
error:
  title: >-
    Application Error
  description: >-
    An error has occured - please contact bot operator.
    
    ```
    
    ${error_repr}
    ```
  color: *color_error


# Message if a command check (almost always a permissions check) has occured.
error_command_perms:
  title: >-
    Application Error
  description: >-
    You do not have permissions to run this command.
  color: *color_error


# Message if a command is under construction.
under_construction:
  title: >-
    Under construction
  description: >-
    This command is under construction.
  color: *color_warning


# /help about
help_about:
  title: >-
    Mitsuki v${version}
  description: >-
    A little fun bot.


    Copyright (c) 2024 **Mifuyu**

    Source code is available at GitHub: https://github.com/mifuyutsuki/mitsuki


    **Mitsuki** is available under the AGPL 3.0-or-later license.
    This license does not extend to some assets, such as gacha cards.
    All resources belong to their respective owners.


# /help license
help_license:
  title: >-
    License
  description: >-
    Copyright (c) 2024 **Mifuyu** (mifuyutsuki)

    Source code is available at GitHub https://github.com/mifuyutsuki/mitsuki


    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as
    published by the Free Software Foundation, either version 3 of the
    License, or (at your option) any later version.


    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
    GNU Affero General Public License for more details.


# /gacha daily
# Claim daily Shards.
# 
# currency_icon : Gacha currency icon (Shards)
# shards        : Number of daily Shards claimed
# timestamp_r   : Dynamic timestamp showing time to next reset
gacha_daily:
  title: >-
    Claimed daily ${currency_icon} ${shards}
  description: >-
    Next daily is available ${timestamp_r}


# /gacha daily
# Message if daily Shards are already claimed.
# 
# timestamp_r   : Dynamic timestamp showing time to next reset
gacha_daily_already_claimed:
  title: >-
    Already claimed for today
  description: >-
    Next daily is available ${timestamp_r}
  color: *color_error


# /gacha shards
# Show Shards amount held by a target user.
# 
# currency_icon : Gacha currency icon (Shards)
# target_user   : Target user (mention), defaults to self
# shards        : Number of Shards held by target user
gacha_shards:
  title: >-
    ${currency_icon} ${shards}
  description: >-
    Amount held by ${target_user}


# /gacha give
# /gacha admin give
# Give an amount of Shards to another user.
# 
# currency    : Gacha currency, shown with icon
# target_user : Target user (mention) other than self
# shards      : Number of Shards sent to target user
gacha_give:
  title: >-
    ${shards} ${currency} sent
  description: >-
    Sent to ${target_user}


# /gacha cards
# View a user's collection of gacha cards. (List mode)
#
# target_username : Target user's username
# target_usericon : Target user's avatar
# target_user     : Target user (mention), defaults to self
# page            : Current page number
# pages           : Total number of pages
# total_cards     : Total number of unique cards obtained by target user
# 
# Recurring field:
# name   : Card name
# type   : Type (category) of card
# series : Series name (subcategory) of card
# stars  : Stars denoting rarity
# image  : Image URL of card
gacha_cards:
  title: >-
    ${target_username}'s Cards Collection (${page}/${pages})
  description: >-
    `${total_cards}` unique cards obtained by ${target_user}
  thumbnail   : ${target_usericon}
  field       :
    name      : ${stars} ${name}
    value     : >-
      `${amount}` • ${type} • ${series} • <t:${first_acquired}:f>
    inline    : false
  

# /gacha cards
# View a user's collection of gacha cards. (Deck mode)
#
# target_username : Target user's username
# target_usericon : Target user's avatar
# target_user     : Target user (mention), defaults to self
# page            : Current page number
# pages           : Total number of pages
# total_cards     : Total number of unique cards obtained by target user
# 
# Recurring field:
# name   : Card name
# type   : Type (category) of card
# series : Series name (subcategory) of card
# stars  : Stars denoting rarity
# image  : Image URL of card
gacha_cards_deck:
  author:
    name: >-
      ${target_username}'s Cards Collection (${page}/${pages})
    icon_url: ${target_usericon}
  title: >-
    ${name}
  description: >-
    ${stars} • ${type} • ${series}


    `${amount}` in ${target_user}'s card collection

    First acquired by user: <t:${first_acquired}:f>
  image: >-
    ${image}
  color: >-
    ${color}


# /gacha cards
# Message if the user has no obtained cards.
#
# target_username : Target user's username
# target_usericon : Target user's avatar
gacha_cards_no_cards:
  title: >-
    ${target_username}'s Cards Collection
  description: >-
    User ${target_user} has no cards
  thumbnail   : ${target_usericon}
  color: *color_error


# /gacha view
# View a card you own.
# Message upon returning search results. (User search)
gacha_view_search_results:
  title: >-
    Search results for "${search_key}"
  description: >-
    Searching from `${total_cards}` unique cards in ${target_user}'s
    card collection


    To find more results, further specify the card name.
    If you can't find the card, the card might have not been
    obtained by the user or doesn't exist.
  thumbnail   : ${target_usericon}
  field       :
    name      : ${stars} ${name}
    value     : >-
      `${amount}` • ${type} • ${series} • <t:${first_acquired}:f>
    inline    : false


# /gacha view
# View a card you own.
# Message upon returning search results. (Global search)
gacha_view_search_results_2:
  title: >-
    Search results for "${search_key}"
  description: >-
    Searching from `${total_cards}` acquired cards


    To find more results, further specify the card name.
    If you can't find the card, the card might have not been
    obtained by the user or doesn't exist.
  field       :
    name      : ${stars} ${name}
    value     : >-
      ${type} • ${series}
    inline    : false


# /gacha view
# Message when there are no matching results for a search key. (User search)
gacha_view_no_results:
  title: >-
    No matching results for "${search_key}"
  description: >-
    Searching from `${total_cards}` unique cards in ${target_user}'s
    card collection


    To find more results, further specify the card name.
    If you can't find the card, the card might have not been
    obtained by the user or doesn't exist.
  thumbnail   : ${target_usericon}
  color: *color_error


# /gacha view
# Message when there are no matching results for a search key. (Global search)
gacha_view_no_results_2:
  title: >-
    No matching results for "${search_key}"
  description: >-
    Searching from `${total_cards}` acquired cards


    To find more results, further specify the card name.
    If you can't find the card, the card might have not been
    obtained by the user or doesn't exist.
  color: *color_error


# /gacha view
# Message if target user has no cards.
gacha_view_no_cards:
  title: >-
    Target user has no cards
  description: >-
    User ${target_user} has no cards to view.
  thumbnail   : ${target_usericon}
  color: *color_error


# /gacha view
# Message if the acquired roster has no cards (edge case).
gacha_view_no_acquired:
  title: >-
    No acquired cards
  description: >-
    There are no acquired cards to view.
  color: *color_error


# /gacha view
# Message after selecting a card to view. (User search)
gacha_view_card:
  author:
    name: >-
      ${target_username}'s Cards Collection
    icon_url: ${target_usericon}
  title: >-
    ${name}
  description: >-
    ${stars} • ${type} • ${series}


    `${amount}` in ${target_user}'s card collection

    First acquired by user: <t:${first_acquired}:f>
  image: >-
    ${image}
  color: >-
    ${color}


# /gacha view [NEW]
# Message after selecting a card to view. (Global search, unacquired by user)
gacha_view_card_2_unacquired:
  title: >-
    ${name}
  description: >-
    ${stars} • ${type} • ${series}


    Not yet acquired in your card collection
  image: >-
    ${image}
  color: >-
    ${color}


# /gacha view [NEW]
# Message after selecting a card to view. (Global search, acquired by user)
gacha_view_card_2_acquired:
  title: >-
    ${name}
  description: >-
    ${stars} • ${type} • ${series}


    `${amount}` in your card collection

    First acquired: <t:${first_acquired}:f>
  image: >-
    ${image}
  color: >-
    ${color}


# /gacha roll
# /gacha give
# Message if user has not enough Shards.
# 
# currency      : Name of gacha currency, shown with symbol
# currency_icon : Symbol of gacha currency
# cost          : Shards required
# shards        : Shards currently owned by user
gacha_insufficient_funds:
  title: >-
    Not enough ${currency}
  description: >-
    Need ${currency_icon} **${cost}**, has ${currency_icon} ${shards}
  color: *color_error


# /gacha give
# Message if user supplied self as target user.
gacha_give_self:
  title: >-
    Invalid target user
  description: >-
    You gave to yourself. Oh wait, you can't.
  color: *color_error


# /gacha roll
# Message if user rolled a new card.
# 
# name   : Card name
# type   : Type (category) of card
# series : Series name (subcategory) of card
# stars  : Stars denoting rarity
# image  : Image URL of card
gacha_get_new_card:
  author:
    name: >-
      Obtained card!
    icon_url: ${usericon}
  title: >-
    ${name}
  description: >-
    ${stars} • ${type} • ${series}
    

    ✨ **New!**
  image: >-
    ${image}
  color: >-
    ${color}


# /gacha roll
# Message if user rolled a duplicate card.
# 
# name   : Card name
# type   : Type (category) of card
# series : Series name (subcategory) of card
# stars  : Stars denoting rarity
# image  : Image URL of card
# 
# currency    : Name of gacha currency, shown with icon
# dupe_shards : Shards obtained from obtaining the duplicate card
gacha_get_dupe_card:
  author:
    name: >-
      Obtained card!
    icon_url: ${usericon}
  title: >-
    ${name}
  description: >-
    ${stars} • ${type} • ${series}


    **${currency}** +${dupe_shards}
  image: >-
    ${image}
  color: >-
    ${color}


# /admin gacha reload
gacha_reload:
  title: >-
    Reloaded gacha configuration
  description: >-
    Cards in roster: ${cards}


# /admin gacha cards
# Similar to /gacha cards, but list all cards currently in roster.
gacha_cards_admin:
  title: >-
    Card Roster (${page}/${pages})
  description: >-
    `${total_cards}` unique cards in the roster
  field       :
    name      : ${stars} ${name}
    value     : >-
      `${card_id}` • ${type} • ${series}
    inline    : false